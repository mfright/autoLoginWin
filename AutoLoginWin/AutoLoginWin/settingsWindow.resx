<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AADXginXginXgirXgyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZ
        hzPZhzPZiDTZiDTZiDXZiTXZiTXaiTbaiTbaijfaijfaijjaiznaiznaizraizrajDvajDvajDvbjTzb
        jTzbjT3bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginXgirXgyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7Y
        hS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZiDXZiTXZiTXaiTbaiTbaijfaijfaijja
        iznaiznClz6FuEtzwk/MlD7ajDvbjTzbjTzbjT3bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginXgirX
        gyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZ
        iDXZiTXZiTXaiTbaiTbaijfZizfLkjuxoUFfyVg82WtVwIg90X7AikDajDvbjTzbjTzbjT3bjT3bjj7b
        jj7bjj/bj0Dbj0Dbj0HXginXginXgirXgyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDY
        hjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZiDXZiTXZiTXaiTbXize2nj6Gt0lP0GE/03xrsJuPlK+Qj7RU
        u4DSaTzajDvbjTzbjTzbjT3bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginXgirXgyvXgyvXgyvYgyzY
        hC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZiDXZiTXWija0nT5g
        ylE/2WhawYl7qKOTlbOajbmYi7uPkbZWuYHZVj7egTrbjTzbjTzbjT3bjT3bjj7bjj7bjj/bj0Dbj0Db
        j0HXginXginXgirXgyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZ
        hzPZhzPZiDTSiza2mz2JtEhI1WU42350tJyZm7Kcl7mblbqak7uaj7uZjbuPk7VZtn/bS0npaTjbjTzb
        jTzbjT3bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginXgirXgyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7Y
        hS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZhzPUijSfp0FhyVBO0W1Wy4qAsqSdoLSgnrmfnbmembqdl7qc
        lbqbkrqakLuKmbJirHfgPlLwVDfciTvbjTzbjT3bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginXgirX
        gyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDYhjDZhjHTijPAlTiMsUdL1l9J1nl1vpiU
        rq6fp7WipLigo7mfoLmgnrmenLqembqdl7qclbqbk7uJnLFlrHbgPVb2QD3gfzrbjTzbjT3bjT3bjj7b
        jj7bjj/bj0Dbj0Dbj0HXginXginXgirXgyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDM
        jDOdpz9rw09H2XFX042Iu6Wmrbelrbikq7ijqbiip7ihpbmgo7mgoLmgnrmfnLqdmrqdlrqblLuGobBq
        qHHkOlj4L0bmbjrbjTzbjT3bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginXgirXgyvXgyvXgyvYgyzY
        hC3YhC3YhC7YhS7YhS7YhS7MizKGs0RI1ldR1nlwzJeVvayntLans7ensremr7imrbikq7ikqbiip7mi
        pbihormgoLmgnrmfnLqembqdl7qCp61yomrpOVj3Lk3wVDnbjTzbjT3bjT3bjj7bjj7bjj/bj0Dbj0Db
        j0HXginXginXgirXgyvXgyvXgyvYgyzYhC3YhC3XhS7JjTKkozxpxVI8429c2Y2Vw6mqvbSru7aqubap
        t7eotrentLensbimr7ilrbilq7ijqbijp7mipbmhormgoLmgnrqfm7qembqCqaxzo2npPVj0MVX5OTzd
        iDvbjT3bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginXgirXgyvXgyvXgyvYgyzYhC3AkTN/tkVW0VlO
        4H1z15ibyKuvwrWtwbWpwbenwbisvLaqubaqt7eptreotLensrinsLimrrilrLikqbijp7iipbmio7mg
        obqhnrqfnLp/r6l7nWLvPFfzNVj4NEXnbznbjT3bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginXgirX
        gyvWgyvLii+ymTZoxlBB4Who3YuR1KWnzK+xxrSwxbWvxbWuw7akyLyL382nwrqrvLequbaquLeotreo
        tLiosrinsLimrrilrLilqrmjp7mipbmho7qgobqgnrp8sqd/m17zPVfzOVf2NVHyUzbcijzbjT3bjj7b
        jj7bjj/bj0Dbj0Dbj0HXginXginXgSrAjjGJrUFU1V5H6n144Jmp0q60zbS0y7Szy7SyybSxx7SwxrWv
        xLWhzb6H7tuN3cuqv7esvLarurept7eptrentLios7imsLimrrilrLikqrijp7mipbmho7qhobp7tKaC
        ml7yQlfzPVf0OVb1RDzhfjvbjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginMhy1fw01c5YWP3aGu1a63
        0rO20LO1z7S0zbSzzLS0y7SyybSyyLWxxrWlzbuM7NmF79ubzL6tvbasvLarubequLeptreotbiosrin
        sLinrrilrLilqbmjp7mjpbmio7pyupyVj1zyRVbyQVbzPVf3OUXnbznbjT3bjj7bjj7bjj/bj0Dbj0Db
        j0HXginXginAjzBhzWep0am61LK507K407O30rO20LO1z7S0zrSzzLSzy7SyyrSxyLWpy7iP6dWK9eSL
        4s2pwritvrasvLerubeqt7iptreptLiosriosLimrrimrLilqrmjp7mipblvvpici1vySVbyRVbzQlf2
        Ok7wVTncjD3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXgim5kzJmz3K1w6m91bK71LK61LO407O30rO20LO2
        0LS1z7S0zLS0y7SzyrSwyLWT4cuQ9eWF8dyezb+uwLatvratvLesureruLeqtriqtbips7iosLinrrim
        rLmlqrmkqLlswJKjiVvxTVXySVbyRVf0QFP4Pj3diDzbjj7bjj7bjj/bj0Dbj0Dbj0HXginXgim0ljRj
        2Hm9uKm/07G81bK71LK607K507O307O30bO20LS0zbS0zbS0y7WzyrWi1L2N9OGP9eWG6NGnx7qpxLmo
        wrqowLmovLiquLiqt7iqtbips7iosLinrrmmrLmlqrljxom1f1nxUFbxTFXySFbyRFb5OkPldDrbjj7b
        jj7bjj/bj0Dbj0Dbj0HXginXgim0ljRj23m8vKjCybC+1bK91bK71LO607O407O307O30bO2z7S1zrS0
        zLS0y7WzyrWN69GT9eeL9eOB9d5+9Nx68tp87NSD4M2U0MOjvrurt7iptbips7iosbinr7mmrblhyIe4
        f1jxVVXxUVbyTVbySVb1QU/wVzjbjT7bjj7bjj/bj0Dbj0Dbj0HXginXgimwmTVj3X68w6fHv67A1bK/
        1rK91bK81LK61LO507O407O30bO20LS1zrS1zbS0y7WW5MuT9eaP8+OO9uSI9eGB9d5889t289l08NV/
        48+UzcOpubmqtbips7iosLinrrlazH/GeFfxV1XxVFTyUVbyTVbyR1X2Rznfgzzbjj7bjj/bj0Dbj0Db
        j0HXginXgimonTdl44jBx6nJua3D0bHA1rK/1bK+1bK71LO71LO607O40rS30bS20LS2zrS1zLWY5cud
        +OyF69iR9eaN9uOG9eCA9N1689p089dv8tRw8dV65s+axcCotrmps7iosblTz3fTclXxXFXxWFXxVFXy
        UFbyTFf2Q0TmcDrbjj7bjj/bj0Dbj0Dbj0HXginXgimonTdl5InCyqnIu6rGzLDD17LB1rLA1bK+1bK8
        1bK71LO607O507S30rS30LS3z7Sa5syh+e6R8OGG7tqQ9+WL9uKF9eB+9dx59Nlz89Zs89Nr8tNz7NOM
        08eptrmps7hT0XfUdFXwX1PwW1TxWFXxVFXyUFb1RUzuXDnciz7bjj/bj0Dbj0Dbj0HXginXgimnnjho
        44nDy6nHv6rJwq7F17LD1rLB1rK/1rK+1bK91bK807O61LS407S30bS30LWe5sqk+e+e9+uB6NKG7tmO
        9uOJ9uKC9d599dt39Nhx89Vr89Jm8tBw79SH2MqivbxJ1W/lbVTwYlTwX1PxW1XxWFXxVFb0TFH1Szze
        hz3bjj/bj0Dbj0Dbj0HXginXgimRrUJ734/Fy6nGx6nNuazH17HF17LD1rLB1rLA1rK/1bK91LO81LO7
        07S507S30bSl4MWi+u2m+fCP792I7dmI8NuI8t2H9uCC9d179dp19Ndv89No89Bj8s5n8dF74s5A22rv
        aVPwZlPwYlTxX1TxW1XxWFXxU1X5QELkeDzbjj/bj0Dbj0Dbj0HXginXgimOsEWA3pHHy6nGy6nOt6vJ
        0LDH2LHF17LD17LC1rLA1rK/1bK91bO81LO71LS507Sq3sGj++2r+/KZ8+SG6tWW9+aL8t5+7dWB89qA
        9tx69dlz9dVt9NJn89Bh88xh8s005W7cfVrvaVPvZVPwYlTwX1TxW1bxV1X2SUrtXzrbjj/bj0Dbj0Db
        j0HXginXgimOsEWB3pHJy6nIy6nLwarOw67I2LHH2LLF17LE17LC1rLA1bO/1bO91LO91LS707Sw27yi
        +eiv+/Sg9umO7tuU8+OX+OiP9+OD8dh57NJ78dd289Vx89Ns89Jl881E9a4e+3aVvnjpclbvaVPwZVTw
        YVTxXlXxW1byVFP1Sjnciz7bj0Dbj0Dbj0HXginXgimBuUyP25TKy6nKy6nKyKnSuq3L1rHJ2LLG17LG
        17LE17LC1rPB1bO/1bO/1bS907S117em8tuw+/Og9eek+eyK7dia+OiV+OaP+OOI9t998NZ38NNw7s9j
        7sVB9qce/IEi/3pL84fKj2Lva1PwaFTwZFTwYlTxXlXxW1b3Rz/jeDzbj0Dbj0Dbj0HXginXgilzw1Od
        15nNy6nMy6nLyqnRu6vOz7DL2bHJ2bLI2LLG2LLE17LD17PB1bPB1bO/1bS81bSm6Mqu+u+h9Oet/PKX
        8+KS89+Y+eiU+eaN+OKE+Nxy985D96Mg+YEl/n8x/4Mv/4Ir/4CJyXztcFPvbFPwaFPwZVTwYlXxXlX1
        TknrZDnbjkDbj0Dbj0HXginXgil0w1Oe2JnPy6nNy6nMy6nQv6vSxa7N2bHL2bLK2bLI2LLG17LF17LD
        1rPC1bPB1bS/1bSy27qp9+W4/Pey/PSl+eyL7diM8NqI+Nln+r9A/Jws/oNA/4xX/5pT/5dG/5A5/4cs
        /4BI9IXJk2Pvb1PvbFTwaVTwZVTwYlXzWVHzUjvehz/bj0Dbj0HXginXgilsyVen1pvRzKnPzKnOy6nP
        xarVvazO2bHM2rHM2bHK2bLI2LLH2LLF17LE17PD1rPB1bS/1bSo6s63/PW3/Paw/PKN89hR96k1+481
        8IFj/6F2/6x1/6xq/6Vb/5xP/5VB/400/4Uy/YKXwnnqdlTvblLvbFTwaFTwZVTxXlP1T0DggT7bj0Db
        j0HXginXgilb1WC60qDTzKnRzKnPy6nOyqrXtqvR1LDO2rHN2rHM2bHK2bLI2LLH2LLF17PD1rTD1rPB
        1bS52ric9tmR/ddX/agv94NP74+P+LiP9LZu45l48KV096dx/qlk/6FY/5pL/5I+/4sz/4Rd6obTjmDv
        clLvb1Pva1TxZVLzWUz3STvggj7bj0Dbj0HXginXgila1WG80qDVzKnTzKnRzKnQzarVvqvVx6/Q2rHO
        2rHO2rHM2bLK2bLJ2LLH2LPF17PD1rOq26px5pRE84ZT/Zea/8Ko8sSq78SJ46qq/cqf/cR97qlm5pdg
        6ZRU6Y1V85NS/pZG/485/4hC/42os3HvdFPxak/2Vkb2Tj/yVDnobTrcjD/bj0Dbj0HXginXgila1mK/
        0qHWzKnVzKnTzKnSzarSyKrbuq3S2bDQ2rHP2rHO2bLM2bLK2bLD2bCo3qZh6ohC6296zlq2s1CW4pXk
        /+7b/eiv7saU5rKe8b2p/8ud/8SM/bh49aln851V7I8723g133Y++og8/4l63If3Tz/3SjnrZDrjejze
        hj3bjT/bj0Dbj0Dbj0HXginXgilG5mzVzafZzKnXzKnVzKnUzarSzarauqzX0LDS2rDR2rHO2rGy36iK
        5ZlV6XdN4l2awU/gnkTtg0HyazzfbEOm77Lf/+y37svN/+GJ4aiR7LSi/cWY/8GN/7p+/7Fy/6pk/6FX
        /5pK/5I9/4pa+ZbNikfcijzbjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXgilD6W/czKnazKnZzKnXzKnW
        zarUzarYv6vayK7U27HT2rGM5phN63Jx1Viuu0vcnUPxdD31WTjuXDTmajPdfDWys1689cnW+ePW/+a6
        99KA3qJ64qCU+LuV/76G/7V6/69t/6Zg/59S/5dF/49Q/ZSkvmfbjT3bjT3bjj7bjj7bjj/bj0Dbj0Db
        j0HXginUhCpG6XDdzKnczKnbzKnZzKnXzarWzarXxqrdv63W2LHU27Fg6oC3rUfliz7zYDf0UDPpZDPe
        fDPahDPZhzTZiDTWijesuWTC+NHb/+nR/+K4+dCa7rmC56h15Z+F+LJ9+q91/6tp/6Rc/5xO/5RG/4+U
        2YfWkD/bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXgim/jzBd5HjgzKnezKndzKnbzKnZzarYzarXyqrfuazc
        ya/ZzbBR5HfjYTftWjLjbzLbgjLZhzLZhzPZhzPZiDTZiDTZiDXZiTWmxXO6+s/X/+fN/+Cv9cmR7LSa
        975766Z68qhu86Jj85tZ85VS+pRN/5SH5pLKm0nbjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXgim2lTJm43zi
        zKngzKnfzKndzKnbzarazarZzKraxarevavcvatD5HDdejDZhDDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZ
        iDXZiTXPkjydzXm8/NPU/+TB+9h93aCF56qd/sOT/75++a5y+aZm+Z9c/JxV/5h58ZrCplTbjT3bjj7b
        jj7bjj/bj0Dbj0Dbj0HXgimumTVw4X/kzKnizKnhzKnfzKnezarczarazarYzarXzarA0qNW2mXYhjDY
        hjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZiDXZiTXZiTXWjDeixnGy+MfI/d2b6bia7rpw3JiQ9riP/7uD
        /7R1/6xo/6Rd/51t+qG8r1/bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXgimYpjqI3YflzKnkzKnjzKnhzKng
        zarezarczarazarZzaqV3JVzw1LYhjDYhjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZiDXZiTXZiTXaiTbU
        jjuwvGuo9b2p78Or9Mai9sJ95qRs4piD+bF+/7Fw/6lk/6Jr/6itv27ajj7bjj7bjj7bjj/bj0Dbj0Db
        j0HXgimVqDuM3InnzKnmzKnkzKnizKnhzarfzarR0Ka31Z5434ZJ32SrnjrYhjDYhjDZhjHZhzLZhzLZ
        hzPZhzPZiDTZiDTZiDXZiTXZiTXaiTbaiTbXjDm/p1OZ6KGz+8y5/9Sp/cqB66pk3pFm5pdj7Jhk951t
        /6iM34zYkD/bjj7bjj7bjj/bj0Dbj0Dbj0HXgimGsECe2Y7pzKnozKnmzKnkzKnK0qOX3pRg5HpX1FqC
        tkTBkjTYhS/YhjDYhjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZiDXZiTXZiTXaiTbaiTbaijfaijfJmUWn
        yHeg9rms/82o/8qR+Lly66Bx8qN1/qts/6d2+qfFoU7bjj7bjj7bjj/bj0Dbj0Dbj0HXgil2ukS01pXr
        zKnozajN0aF/4olC6W5ly1SmoDvGjzPXhi7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZ
        iDXZiTXZiTXaiTbaiTbaijfaijfaijjVjzy7q1aa1IKH+7Gb/sKD8q9l45Rc5I9r+6Rs/6eN4Y7Eok7b
        jj7bjj/bj0Dbj0Dbj0HXgimdqECW3Iui3JNo4XhK2FiBtUPMizDYhC3YhC7YhS7YhS7YhS7YhS/YhjDY
        hjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZiDXZiTXZiTXaiTbaiTbaijfaijfaijjaiznaiznaizrNlUGi
        vGOP3oyM8aZ//K9d55JX65Bh9Jt38JmvtWHSlkXbj0Dbj0Dbj0HXgim1lTNwwk5vw02XqDzIjC/YgyzY
        hC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZiDXZiTXZiTXaiTba
        iTbaijfaijfaijjaiznaiznaizraizrajDvSk0G6qFOjxG9575Zd9JlZ7ZJj/KFz+KOW14W8qlbbj0Db
        j0HXginXginQhizRhizWgyvXgyvYgyzYhC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZ
        hzPZhzPZiDTZiDTZiDXZiTXZiTXaiTbaiTbaijfaijfaijjaiznaiznaizraizrajDvajDvajDvXjz3H
        nUmju2KYx2+M1n6O2YKW2Ielz4K5q1jXkkPXginXginXgirXgyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7Y
        hS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZiDXZiTXZiTXaiTbaiTbaijfaijfaijja
        iznaiznaizraizrajDvajDvajDvbjTzbjTzbjT3bjT3bjj7bjj7bjj/bj0Dbj0Dbj0HXginXginXgirX
        gyvXgyvXgyvYgyzYhC3YhC3YhC7YhS7YhS7YhS7YhS/YhjDYhjDZhjHZhzLZhzLZhzPZhzPZiDTZiDTZ
        iDXZiTXZiTXaiTbaiTbaijfaijfaijjaiznaiznaizraizrajDvajDvajDvbjTzbjTzbjT3bjT3bjj7b
        jj7bjj/bj0Dbj0Dbj0EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>